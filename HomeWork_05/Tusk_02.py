"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def my_divided(my_number, odd_number=0, even_number=0):
    if not my_number:  # если кончился my_number
        return odd_number, even_number
    if my_number % 10 % 2 == 1:  # Двойная проверка на нечетность
        odd_number += 1
    else:
        even_number += 1
    return my_divided(my_number // 10, odd_number, even_number)


my_number = int(input('Введи число: '))
print(f'Количество четных и нечетных цифр в числе равно: {my_divided(my_number)} ')
